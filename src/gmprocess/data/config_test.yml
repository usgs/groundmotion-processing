
# -----------------------------------------------------------------------------
user:
  name: Test user
  email: testuser@email.com
# -----------------------------------------------------------------------------
# This section is for configuring data fetching routines.
fetchers:
    KNETFetcher:
        # Enable this fetcher?
        enabled: True
        # NIED requires a username and a password, obtain these by
        # visiting this page:
        # https://hinetwww11.bosai.go.jp/nied/registration/
        user: USERNAME
        password: PASSWORD
        # define the distance search radius (km)
        radius : 100.0
        # define the time search threshold (sec)
        dt : 60.0
        # define the depth search threshold (km)
        ddepth : 30.0
        # define the magnitude search threshold (km)
        dmag : 0.3
        # restrict the number of processed stations by
        # using magnitude to set maximum station distance
        restrict_stations: false
    CESMDFetcher:
        # Enable this fetcher?
        enabled: True
        # CESMD requires an email, register yours by
        # visiting this page:
        # https://strongmotioncenter.org/cgi-bin/CESMD/register.pl
        email: EMAIL
        process_type: raw
        station_type: Ground
        # define the distance search radius (km)
        eq_radius : 10.0
        # define the time search threshokd (sec)
        eq_dt : 10.0
        # station search radius (km)
        station_radius: 100.0
    TurkeyFetcher:
        # Enable this fetcher?
        enabled: True
        # define the distance search radius (km)
        radius : 100.0
        # define the time search threshold (sec)
        dt : 16.0
        # define the depth search threshold (km)
        ddepth : 30.0
        # define the magnitude search threshold (km)
        dmag : 0.3

    FDSNFetcher:
        # Enable this fetcher?
        enabled: True
        # The domain section is for defining the search domain.
        domain:
            # Two domian types of supported: circular, rectangular
            type: circular
            # Arguments for the circular domain type
            circular:
                # Should the center be specified as earthquake epicenter?
                use_epicenter: True
                # If use_epicenter is false, then latitude and longtidue will be used.
                latitude: 37.5
                longitude: -122.0
                # Radius units are decimal degrees
                minradius: 0.0
                maxradius: 3.0
            # Arguments for the rectangular domain type
            rectangular:
                minlatitude: 33.0
                maxlatitude: 37.0
                minlongitude: -123.0
                maxlongitude: -119.0

        restrictions:
            # seconds before origin time -- will be translated to "start_time" in the
            # FDSN query 
            time_before: 30.0
            # seconds after origin time -- will be translated to "end_time"
            time_after: 420.0

            # Below here you can specify additional optional restriction keys. 
            # See: https://docs.obspy.org/packages/autogen/obspy.clients.fdsn.mass_downloader.restrictions.Restrictions.html

            channel: "BH?,HH?,BN?,HN?" 
            network: "*"

            # SY is a network for synthetic data, others listed here are network codes
            # known to be problematic.
            exclude_networks: ['SY', 'ZY', 'YH', 'YG', 'AM', 'PB']

            # The minimum length of the data as a fraction of the requested time frame.
            # After a channel has been downloaded it will be checked that its total
            # length is at least that fraction of the requested time span.
            # Will be rejected otherwise. Must be between 0.0 and 1.0.
            minimum_length: 0.1

            # Only download data that has accompanying StationXML metadata.
            sanitize: True

            # The minimum inter-station distance.
            # Data from any new station closer to any
            # existing station will not be downloaded.
            minimum_interstation_distance_in_m: 0.0


        # authentication:
            # For each of the FDSN providers, a username and password
            # can be provided. This section does not need to contain all of the
            # providers, just the ones you want to give a username and password.

            # Example:
            # IRIS:
            #     user: USERNAME
            #     password: PASSWORD

# -----------------------------------------------------------------------------
# Options for readers
read:
    # Look for StationXML files in this directory instead of the `<event>/raw`
    # directory. StationXML file names must follow the convension of 
    # `<network>.<station>.xml`.
    metadata_directory: None

    # Resampling rate if times are unevenly spaced
    resample_rate: 200.0

    # SAC header doesn't include units (!) and is generally assumed to be:
    #     nm/s/s for acceleration
    #     nm/s   for velocity
    #     nm     for displacement
    # The following is a multiplicative factor to convert the ACTUAL data the 
    # SAC files being used to cm/s/s for accel or cm/s for velocity.
    sac_conversion_factor: 1e-7      # For nm/s/s
    # sac_conversion_factor: 1e-4    # For um/s/s
    # sac_conversion_factor: 980.665 # For g

    # Also, data source is not included in SAC headers, so we provide an option
    # to set it here:
    sac_source: Unknown

    # Group records with the StreamCollection object? This enforces 3 orthogonal 
    # component groupings in which they have the same time span as well as other  
    # consistency checks. Set to False for stuctural/geotech array data for which these
    # do not make sense
    use_streamcollection: True

    exclude_patterns: ['*.*.??.LN?']

# -----------------------------------------------------------------------------
# Options for separating noise/signal windows
#
#    |<---Noise Window--->|<-----Signal Window----->|
#    |                    |                         |
#    |                    |  /\          /\/\       |
#    |____________________|_/  \  /\    /    \/\____|
#    |                    |     \/  \  /            |
#    |                    |          \/             |
#
#    record_start       split              signal_end

windows:

    signal_end:
        # Options for setting the end of the signal window. Options are set with the key
        # "method":
        #    - "velocity": Set the end of the signal can be set using a phase velocity;
        #      this option makes use of the keys "vmin" and "floor".
        #    - "model": Set the end of the signal window using a shaking duration model;
        #      this options makes use of the keys "model" and "epsilon"
        #    - "none": Use the full available record; this is useful if the records
        #      have already been trimmed to a resonable level and you do not wish to
        #      further reduce trace duration.
        #    - "magnitude": Use the magnitude-based signal end as defined by CISN, which
        #      is magnitude/2 (units of minutes).

        method: model
        vmin: 1.0
        # Minimum duration in sec for use with 'vmin' option.
        floor: 120.0
        # Duration model
        model: AS16
        # Number of standard deviations; if epsilon is 1.0, then the signal
        # window duration is the mean Ds + 1 standard deviation.
        epsilon: 2.0

    window_checks:
        # Minimum noise duration; can be zero but this will allow for errors
        # to occur if requesting signal-to-noise ratios.
        do_check: True
        min_noise_duration: 1.0

        min_signal_duration: 5.0

check_stream: 
    # Fail a stream if any of the constituent traces failed?
    any_trace_failures: True

# -----------------------------------------------------------------------------
# This section is for processing steps that will affect the waveform and get
# recorded as seismological provenance data.
processing:

    # Check to keep or ignore non-free-field sensors. Typically, these include
    # sensors attached to a large structure (buildings, dams, bridges, etc.)
    - check_free_field:
        reject_non_free_field: True

    # Amplitude check to avoid clipping. Units are usually counts (e.g., with
    # data from IRIS) but some sources will convert to physical units so it
    # is important to be careful with this step.
    # - check_max_amplitude:
    #     min: 5
    #     max: 2e6

    # Check number of traces for each instrument. Max is useful for screening
    # out downhole or structural arrays with the same station code.
    - check_instrument:
        n_max: 3
        n_min: 2
        require_two_horiz: True

    # Require a minimum sample rate
    - min_sample_rate:
        min_sps: 20.0

    - detrend:
        # Supported obspy methods (besides the baseline described below):
        #     constant, demean, linear, polynomial, simple, spline
        detrending_method: demean

    - check_zero_crossings:
        # Require a minimum number of zero crossings per second.
        min_crossings: 0.1

    # STA/LTA is computed for record and the max value must exceed the threshold
    # below. Units are sec for window lenghts.
    # - check_sta_lta:
    #     sta_length: 1.0
    #     lta_length: 20.0
    #     threshold: 3.0

    - remove_response:
        pre_filt: True
        # Pre-filtering frequencies. See obspy.core.trace.Trace.remove_response
        # for details. Note: if f3 is Null it will be set to 0.9*fn, if f4 is
        # Null it will be set to fn.
        f1: 0.001
        f2: 0.005
        f3: Null
        f4: Null

        # Water level (dB) for deconvolution
        water_level: 60.0

    - detrend:
        # Supported obspy methods (besides the baseline described below):
        #     constant, demean, linear, polynomial, simple, spline
        detrending_method: linear

    - detrend:
        # Supported obspy methods (besides the baseline described below):
        #     constant, demean, linear, polynomial, simple, spline
        detrending_method: demean

    - compute_snr:
        # Presense of this check says to do the signa-to-noise ratio check. Requires
        # minimum SNR of `threshold` between `min_freq` and `max_freq` using
        # Konno-Omachi smoothed spectra with `bandwidth` parameter.
        bandwidth: 20.0

    - snr_check:
        # Impose a minimum SNR critera across a frequency band for accepting the record.
        threshold: 3.0
        min_freq: 'f0'  # Either a float or 'f0'. If 'f0', then the Brune
        # corner frequency of the earthquake will be used as the minimum
        # frequency for the SNR check.
        max_freq: 5.0
        f0_options:
            stress_drop: 10.0  # bars
            shear_vel: 3.7     # km/s

            # If the computed f0 is greater than ceiling, then the ceiling frequency
            # will be used. 
            ceiling: 2.0       # Hz

            # If the computed f0 is less than the floor, then the floor frequency will
            # be used.
            floor: 0.1         # Hz

    # - NNet_QA:
    #     # Neural network quality assurance method by Bellagamba et al. (2019)
    #     acceptance_threshold: 0.5
    #     model_name: CantWell

    - get_corner_frequencies:
        # Corner frequency selection can use constant values, or selected
        # dynamically from the signal-to-noise-ratio.

        # Valid options for "method" are "constant" and "snr".
        method: constant

        constant:
            highpass: 0.08
            lowpass: 20.0

        # The magnitude option is to suppport the corner frequency method used by 
        # PRISM (https://doi.org/10.3133/ofr20171008; Table 1). 
        magnitude:
            minmag: [-999.0, 3.5, 5.5]
            highpass: [0.5, 0.3, 0.1]
            lowpass: [25.0, 35.0, 40.0]

        snr:
            # For dynamic filtering, we require a minimum SNR threshold between
            # as configured in the snr_check step.
            same_horiz: True

    # Apply a cap to the lowpass corner frequency so that it is guaranteed to be
    # less than or equal to fn_fac * fn, where fn is the Nyquist frequency
    - lowpass_max_frequency:
        fn_fac: 0.75

    # - adjust_highpass_corner:
    #     # Options for further refinement of the highpass corner. Currently, this
    #     # includes criteria employed by:
    #     #
    #     #     Dawood, H.M., Rodriguez-Marek, A., Bayless, J., Goulet, C. and
    #     #     Thompson, E. (2016). A flatfile for the KiK-net database processed
    #     #     using an automated protocol. Earthquake Spectra, 32(2), pp.1281-1302.
    #
    #     # This algorithm begins with an initial corner frequency that was selected
    #     # as configured in the `get_corner_frequencies` step. It then chcks the
    #     # criteria descibed below; if the criteria are not met then the high pass
    #     # corner is increased the multiplicative step factor until the criteria
    #     # are met:
    #     step_factor: 1.3
    #
    #     # If the criteria are not satisfied for a corner frequency below this
    #     # threshold then the stream will be rejected/failed:
    #     maximum_freq: 0.9
    #
    #     # Maximum value (in cm) for final displacement:
    #     max_final_displacement: 0.025
    #
    #     # Maximum ratio of the final displacement to the maximum displacement:
    #     max_displacment_ratio: 0.2

    # - resample:
    #
    #       # The new sampling rate, in Hz.
    #       new_sampling_rate: 200
    #
    #       # Currently only supporting Lanczos interpolation, which is
    #       # generall the preferred method and offers the highest quality
    #       # interpolation.
    #       method: lanczos
    #
    #       # Width of the Lanczos window, in number of samples. Increasing "a"
    #       # linearly increases run time, but also increases interpolation.
    #       # quality.
    #       a: 50

    - cut:
        # No required options; the presence of this key just indicates when to
        # cut the time series using the record start and signal end that were
        # configured in the windows section.

        # Optionally, can specify how many seconds to include prior to the
        # split between the noise and signal windows. If set to "Null" then
        # the beginning of the record will be unchanged.
        sec_before_split: 2.0

    - taper:
        # Taper to apply to trace.
        type: hann
        width: 0.05
        side: both

    - highpass_filter:
        # Applies a Butterworth highpass filter using the highpass corner
        # determined with 'corner_frequencies' section.
        # If true, use gmprocess frequency domain implementation; if false, use ObsPy filters
        frequency_domain: False
        filter_order: 5.0
        number_of_passes: 2.0

    - lowpass_filter:
        # Applies a Butterworth lowpass filter using the lowpass corner
        # determined with 'corner_frequencies' section.
        frequency_domain: False
        filter_order: 5
        number_of_passes: 2

    # - detrend:
    #     # The current baseline correction method fits a sixth-order polynomial
    #     # to the displacement time series, and sets the zeroth- and first-order
    #     # terms to be zero. The second derivative of the fit polynomial is then
    #     # removed from the acceleration time series.
    #     detrending_method: baseline_sixth_order

    # - trim_multiple_events:
    #     pga_factor: 0.2
    #     pct_window_reject: 0.7
    #     gmpe: B14
    #     site_parameters:
    #         vs30: 760
    #     rupture_parameters:
    #         rake: 0

    - fit_spectra:
        # Fit a Brune spectra by optimizing moment and corner frequency.
        # Note that it only uses frequencies between the corner frequencies
        # that are selected based on the options in the 'get_corner_frequencies'
        # section of this config file.

        # Kappa (sec)
        kappa: 0.035

        # Radiation pattern factor (Boore and Boatwright, 1984))
        RP: 0.55

        # Partition of shear-wave energy into horizontal components
        # 1 / np.sqrt(2.0)
        VHC: 0.7071068

        # Free surface effect
        FSE: 2.0

        # Density at source (gm/cc)
        density: 2.8

        # Shear-wave velocity at source (km/s)
        shear_vel: 3.7

        # Reference distance (km)
        R0: 1.0

        # Multiplicative factor for setting bounds on moment, where the
        # moment (from the catalog moment magnitude) is multiplied and
        # divided by `moment_factor` to set the bounds for the spectral
        # optimization.
        moment_factor: 100.0

        # Min stress for fit search (bars)
        min_stress: 0.1

        # Max stress for fit search (bars)
        max_stress: 10000.0

colocated:
    # Enable the colocation algorithm?
    enabled: True
    # This section is for handling colocated instruments that have otherwise
    # passed tests. For reference:
    #
    #    B?? = Broad band
    #    H?? = High broad band
    #    ?N? = Accelerometer
    #    ?H? = High gain seismometer
    #
    # Note: for now, lets prefer accelerometers, but once we have a reliable
    # clipping detection algorithm, it probably makes sense to change the
    # preference to high gain seismometers.

    preference: ["HN?", "BN?", "HH?", "BH?"]
    large_dist:
        # Enable separate channel preferences at large distances?
        enabled: False

        preference: [BH?, HH?, HN?, BN?]
        mag: [3, 4, 5, 6, 7]
        dist: [20, 50,100, 300, 600]

# travel_time:
#     # Section for computing travel times which is used by the
#     # "trim_multiple_events" processing step
#     catalog_file: none # Path to the catalog for computing travel times
#     ddepth: 5  # Depth spacing in km
#     ddist: 0.1  # Distance spacing in decimal degrees
#     model: iasp91  # Valid obspy TauPyModel


duplicate:
    # This section is for handling duplicate data when creating a StreamCollection

    # Maximum distance tolerance (in m) for duplicate data
    max_dist_tolerance: 500.0

    # List of preferences (in order) for handling duplicate data.
    preference_order: ['process_level', 'source_format', 'starttime', 'npts',
                       'sampling_rate', 'location_code']

    # Preference for selecting process level when faced with duplicate data
    # but with different processing levels. Must be a list containing
    # 'V0', 'V1', and 'V2'. The first item is the most preferred,
    # and the last item is the least preferred.
    process_level_preference: ['V1', 'V0', 'V2']

    # Preference for selecting the format when faced with duplicate data
    # but with different source formats. Must be a list containing the source
    # format abbreviations found in gmprocess.io. Does not need to contain
    # all possible formats.

    # Example to always prefer COSMOS files over DMG files
    format_preference: ['cosmos', 'dmg']


# -----------------------------------------------------------------------------
# This is for building a report, with a one-page summary of the data in each
# StationStream per page. It will write out the latex file, and then look for
# the `pdflatex` command and attempt to build the pdf. This requires
# `summary_plots` to have been run.
build_report:
    enabled: True
    format: latex

# -----------------------------------------------------------------------------
# This section is for calculating metrics
metrics:
  # Output IMCs
  # Valid IMCs: channels, geometric_mean, gmrotd,
  # greater_of_two_horizontals, rotd
  output_imcs:
      - greater_of_two_horizontals
      - channels
  # Output IMTs
  # Valid IMTs: arias, fas, pga, pgv, sa
  output_imts:
      - PGA
      - PGV
      - SA
      - duration
      - sorted_duration
  # Periods defined for the SA and FAS imts
  sa:
      # damping used to calculate the spectral response
      damping: 0.05
      # periods for which the spectral response is calculated
      periods:
        # Parameters defining an array of periods
        # syntax is the same as that used for numpy linspace and logspace
        # start (first value), stop (last value), num (number of values)
        start: 1.0
        stop: 3.0
        num: 3
        # Valid spacing: linspace, logspace
        spacing: linspace
        # Defines whether the above array is used. If False, only the
        # defined_periods are used
        use_array: False
        # Defines a list of user defined periods that are not
        # predefined by the array of periods
        defined_periods: [0.3, 1.0, 3.0]
  fas:
      smoothing: konno_ohmachi
      bandwidth: 20.0
      allow_nans: True
      periods:
        # Parameters defining an array of periods
        # syntax is the same as that used for numpy linspace and logspace
        # start (first value), stop (last value), num (number of values)
        start: 1.0
        stop: 3.0
        num: 3
        # Valid spacing: linspace, logspace
        spacing: linspace
        # Defines whether the above array is used. If false, only the
        # defined_periods are used
        use_array: True
        # A list of user defined periods that are not
        # predefined by the array of periods.
        defined_periods:
          - 0.3
  duration:
      intervals:
          - 5-75
          - 5-95
  # Section for Vs30 calculations. This may contain several keys. Each key
  # must be unique, and must have the four attributes: file, column_header,
  # readme_entry, and units.
  # file: Path to the grid file that can be loaded using MapIO.
  # column_header: The column header used in the flatfile.
  # readme_entry: The description used in the README file.
  # units: Units that will be stored in the StationMetrics XML.
#   vs30:
#       example_key:
#         file: example_file
#         column_header: example_column_header
#         readme_entry: example_readme_entry
#         units: example_units
# -----------------------------------------------------------------------------
# This section is for options for integration method
integration:
    # Frequency or time domain integration?
    frequency: False
    # Assumption for the first value returned in the resulting trace.
    initial: 0.0
    # Remove the mean of the data prior to integration.
    demean: False
    # Taper the data prior to integration.
    taper:
        taper: False
        type: hann
        width: 0.05
        side: both

# -----------------------------------------------------------------------------
# This section is for options for differentiation
differentiation:
    # Frequency or time domain differentation?
    frequency: True

# -----------------------------------------------------------------------------
# This section is for options for phase pickers
pickers:
    # P-wave pickers, particularly the Travel Time model, can
    # sometimes erroneously place the P-wave arrival time into the
    # signal window, which in turn can degrade the SNR value.
    # this parameter gives the user the ability to shift the
    # calculated P-wave arrival times forwards or backwards in time.
    p_arrival_shift: 0.0

    # Options for obspy.signal.trigger.ar_pick()
    ar:
        # Frequency of the lower bandpass window (Hz)
        f1: 1.0

        # Frequency of the upper bandpass window (Hz)
        f2: 20.0

        # Length of LTA for the P arrival (seconds)
        lta_p: 1.0

        # Length of STA for the P arrival (seconds)
        sta_p: 0.1

        # Length of LTA for the S arrival (seconds)
        lta_s: 4.0

        # Length of STA for the S arrival (seconds)
        sta_s: 1.0

        # Number of AR coefficients for the P arrival
        m_p: 2

        # Number of AR coefficients for the S arrival
        m_s: 8

        # Length of variance window for the P arrival (seconds)
        l_p: 0.1

        # Length of variance window for the S arrival (seconds)
        l_s: 0.2

        # If True, also pick the S phase. Otherwise only the P phase.
        s_pick: False


    # Options for obspy.signal.trigger.pk_baer()
    baer:
        # If dtime exceeds tdownmax, the trigger is examined for validity
        tdownmax: 20.0

        # Minimum number of samples for itrm to be accepted as a pick
        tupevent: 60

        # Threshold to trigger for pick (c.f. paper)
        thr1: 7.0

        # Threshold for updating sigma
        thr2: 12.0

        # Number of points taken for the estimation of variance of SF(t) on preset()
        preset_len: 100

        # Time interval for which the maximum amplitude is evaluated
        p_dur: 100.0

    kalkan:
        # undamped natural period in second (default is 0.01 for
        # records sampled with 100 samples-per-second or larger; for
        # records with lower than 100 samples-per-second default
        # is 0.1 s)
        period: None

        # damping ratio
        damping: 0.6

        # histogram bin size (default is 2/dt for
        # strong-motion acceleration and broadband velocity
        # waveforms; regional or teleseismic records may need
        # different values of bin size for better picking results)
        nbins: None

        # Take segment of waveform from beginning to
        # absolute peak value (recommended for fast processing)
        # False to take full waveform.
        peak_selection: False

    # TODO: Document these options
    power:
        highpass: 1.4
        lowpass: 6.0
        order: 3
        sta: 3.0
        sta2: 3.0
        lta: 20.0
        hanningWindow: 3.0
        threshDetect: 2.5
        threshDetect2: 2.5
        threshRestart: 1.5

    travel_time:
        # this picker uses travel times using configured velocity model
        # list of models can be found here:
        # https://docs.obspy.org/packages/obspy.taup.html#basic-usage
        model : iasp91
