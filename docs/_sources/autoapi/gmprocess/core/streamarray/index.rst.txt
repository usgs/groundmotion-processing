:py:mod:`gmprocess.core.streamarray`
====================================

.. py:module:: gmprocess.core.streamarray

.. autoapi-nested-parse::

   Class for StationStream arrays.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   gmprocess.core.streamarray.StreamArray




Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.core.streamarray.INDENT


.. py:data:: INDENT
   :annotation: = 2

   

.. py:class:: StreamArray(streams=None, config=None)

   Bases: :py:obj:`object`

   .. py:property:: n_passed


   .. py:property:: n_failed


   .. py:method:: describe_string()

      More verbose description of StreamArray.


   .. py:method:: describe()

      Thin wrapper of describe_string() for printing to stdout


   .. py:method:: __len__()

      Number of constituent StationStreams.


   .. py:method:: __nonzero__()


   .. py:method:: __add__(other)


   .. py:method:: __iter__()

      Iterator for GMCollection over constituent StationStreams.


   .. py:method:: __setitem__(index, stream)


   .. py:method:: __getitem__(index)


   .. py:method:: __delitem__(index)


   .. py:method:: __getslice__(i, j, k=1)


   .. py:method:: append(stream)

      Append a single StationStream object.

      :param stream: A StationStream object.


   .. py:method:: pop(index=-1)

      Remove and return item at index (default last).


   .. py:method:: copy()

      Copy method.


   .. py:method:: select(network=None, station=None, instrument=None)

      Select Streams.

      Return a new StreamCollection with only those StationStreams that
      match network, station, and/or instrument selection criteria.

      Based on obspy's `select` method for traces.

      :param network: Network code.
      :type network: str
      :param station: Station code.
      :type station: str
      :param instrument: Instrument code; i.e., the first two characters of the
                         channel.
      :type instrument: str



