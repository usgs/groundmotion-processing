:py:mod:`gmprocess.subcommands.autoprocess`
===========================================

.. py:module:: gmprocess.subcommands.autoprocess


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   gmprocess.subcommands.autoprocess.AutoShakemapModule




Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.subcommands.autoprocess.base
   gmprocess.subcommands.autoprocess.download
   gmprocess.subcommands.autoprocess.assemble
   gmprocess.subcommands.autoprocess.process_waveforms
   gmprocess.subcommands.autoprocess.compute_station_metrics
   gmprocess.subcommands.autoprocess.compute_waveform_metrics
   gmprocess.subcommands.autoprocess.generate_report
   gmprocess.subcommands.autoprocess.generate_station_maps


.. py:data:: base
   

   

.. py:data:: download
   

   

.. py:data:: assemble
   

   

.. py:data:: process_waveforms
   

   

.. py:data:: compute_station_metrics
   

   

.. py:data:: compute_waveform_metrics
   

   

.. py:data:: generate_report
   

   

.. py:data:: generate_station_maps
   

   

.. py:class:: AutoShakemapModule

   Bases: :py:obj:`base`

   Chain together the most common processing subcommands.

   .. py:attribute:: epilog
      :annotation: = Multiline-String

       .. raw:: html

           <details><summary>Show Value</summary>

       .. code-block:: text
           :linenos:

           
               This is a convenience function, but it also provides a mechanism to loop over
               events, calling each of the following subcommands in order:
                 - download
                 - assemble
                 - process_waveforms
                 - compute_station_metrics
                 - compute_waveform_metrics
                 - generate_report
                 - generate_station_maps
               Individual subcommands can be turned off with the arguments to this subcommand.
               

       .. raw:: html

           </details>

      

   .. py:attribute:: command_name
      :annotation: = autoprocess

      

   .. py:attribute:: arguments
      

      

   .. py:method:: main(gmrecords)

      Chain together the most common processing subcommands.



