:py:mod:`gmprocess.waveform_processing.corner_frequencies`
==========================================================

.. py:module:: gmprocess.waveform_processing.corner_frequencies

.. autoapi-nested-parse::

   Methods for handling/picking corner frequencies.



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.waveform_processing.corner_frequencies.get_constant
   gmprocess.waveform_processing.corner_frequencies.get_snr



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.waveform_processing.corner_frequencies.TAPER_WIDTH
   gmprocess.waveform_processing.corner_frequencies.TAPER_TYPE
   gmprocess.waveform_processing.corner_frequencies.TAPER_SIDE


.. py:data:: TAPER_WIDTH
   :annotation: = 0.05

   

.. py:data:: TAPER_TYPE
   :annotation: = hann

   

.. py:data:: TAPER_SIDE
   :annotation: = both

   

.. py:function:: get_constant(st, highpass=0.08, lowpass=20.0)

   Use constant corner frequencies across all records.

   :param st: Stream of data.
   :type st: StationStream
   :param highpass: Highpass corner frequency (Hz).
   :type highpass: float
   :param lowpass: Lowpass corner frequency (Hz).
   :type lowpass: float

   :returns: stream with selected corner frequencies appended to records.
   :rtype: stream


.. py:function:: get_snr(st, same_horiz=True, bandwidth=20)

   Set corner frequencies from SNR.

   :param st: Stream of data.
   :type st: StationStream
   :param same_horiz: If True, horizontal traces in the stream must have the same
                      corner frequencies.
   :type same_horiz: bool
   :param bandwidth: Konno-Omachi smoothing bandwidth parameter.
   :type bandwidth: float

   :returns: stream with selected corner frequencies appended to records.
   :rtype: stream


