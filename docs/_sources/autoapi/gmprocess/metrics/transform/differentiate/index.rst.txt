:py:mod:`gmprocess.metrics.transform.differentiate`
===================================================

.. py:module:: gmprocess.metrics.transform.differentiate


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   gmprocess.metrics.transform.differentiate.Differentiate




.. py:class:: Differentiate(transform_data, damping=None, period=None, times=None, max_period=None, allow_nans=None, bandwidth=None, config=None)

   Bases: :py:obj:`gmprocess.metrics.transform.transform.Transform`

   Class for computing the derivative.

   .. py:method:: get_derivative(self)

      Calculated the derivative of each trace's data.

      :param damping: Damping for spectral amplitude calculations. Default is None.
      :type damping: float
      :param period: Period for spectral amplitude calculations. Default is None.
      :type period: float
      :param times: Times for the spectral amplitude calculations. Default is None.
      :type times: numpy.ndarray
      :param allow_nans: Should nans be allowed in the smoothed spectra. If False, then
                         the number of points in the FFT will be computed to ensure
                         that nans will not result in the smoothed spectra.
      :type allow_nans: bool

      :returns: StationStream with the differentiated data.
      :rtype: stream



