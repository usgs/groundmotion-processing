:py:mod:`gmprocess.metrics.transform.fft`
=========================================

.. py:module:: gmprocess.metrics.transform.fft


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   gmprocess.metrics.transform.fft.FFT




.. py:class:: FFT(transform_data, damping=None, period=None, times=None, max_period=None, allow_nans=None, bandwidth=None, config=None)

   Bases: :py:obj:`gmprocess.metrics.transform.transform.Transform`

   Class for computing the fast fourier transform.


   .. py:method:: get_fft(self)

      Calculated the fft of each trace's data.

      :returns: Computed fourier amplitudes.
      :rtype: numpy.ndarray


   .. py:method:: get_nfft(self, trace)

      If allow_nans is True, returns the number of points for the FFT that
      will ensure that the Fourier Amplitude Spectrum can be computed without
      returning NaNs (due to the spectral resolution requirements of the
      Konno-Ohmachi smoothing). Otherwise, just use the length of the trace
      for the number points. This always returns the next highest power of 2.

      :returns: Number of points for the FFT.
      :rtype: int



