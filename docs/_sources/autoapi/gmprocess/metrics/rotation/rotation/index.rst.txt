:py:mod:`gmprocess.metrics.rotation.rotation`
=============================================

.. py:module:: gmprocess.metrics.rotation.rotation


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   gmprocess.metrics.rotation.rotation.Rotation




.. py:class:: Rotation(rotation_data, event=None, config=None)

   Bases: :py:obj:`object`

   Base class for rotation calculations.

   .. py:method:: _get_horizontals()

      Gets the two horizontal components.

      :returns: list of horizontal channels
                (obspy.core.trac.Trace).
      :rtype: horizontal_channels

      :raises PGMException: if there are less than or greater than two
          horizontal channels.


   .. py:method:: get_max(tr1, pick_peak, tr2=None, percentiles=50)

      Finds the maximum from traces and either picks the geometric mean,
      arithmetic mean, or maximum of the two. The two input can either be
      1D traces, or 2D arrays.

      For the 2D array case, the number of rows must be the number of traces,
      and the numer of columns is the number of samples in the trace.
      The following assumptions are made regarding the 2D array:
          1) The rows in each matrix are the same component at different
             rotation at different angles.
          2) If tr2 is provided, the orientation of the trace in each row is
             orthogonal to the analagous row in tr1
          3) The traces that constitute tr1 and tr2 are both
             horizontal components.

      :param tr1: Trace 1, either 1D trace or 2D matrix of rotated components.
      :type tr1: obspy.core.trace.Trace or 2D array
      :param tr2: Trace 2, either 1D trace or or 2D matrix of rotated components.
                  Default is None.
      :type tr2: obspy.core.trace.Trace or 2D array
      :param pick_peak:
                        The choice for either geometric mean, arithmetic or maximum.
                         The valid strings are:
                            - "gm" for geometric mean
                            - "am" for arithmetic mean
                            - "max" for maximum
      :type pick_peak: str
      :param percentiles: Percentile(s) to return the requested values. Default is 50.
      :type percentiles: list

      :returns:     Returns a singular,  scalar value for the requested pick_peak.
                If 2D input:
                    Returns a list of the maximum values, as well as the singular
                    value at the requested percentile.
      :rtype: If 1D input


   .. py:method:: rotate(tr1, tr2, combine=False, delta=1.0)

      Rotates a trace through 180 degrees to obtain the
      data at each degree.

      :param tr1: Array of trace data.
      :type tr1: ndarray
      :param tr2: Array of trace data.
      :type tr2: ndarray
      :param combine: Whether rotated traces should be combined. Default is False.
      :type combine: bool
      :param delta: Delta degrees which will determine the number of rows
                    for the matrix of rotated components.
                    Default is 1.0
      :type delta: float

      :returns: Array of data at each degree.
      :rtype: numpy.ndarray



