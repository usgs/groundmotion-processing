:py:mod:`gmprocess.io.esm.core`
===============================

.. py:module:: gmprocess.io.esm.core


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.esm.core.is_esm
   gmprocess.io.esm.core.read_esm



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.esm.core.TEXT_HDR_ROWS
   gmprocess.io.esm.core.TIMEFMT
   gmprocess.io.esm.core.TIMEFMT2
   gmprocess.io.esm.core.SRC
   gmprocess.io.esm.core.FORMAT
   gmprocess.io.esm.core.HDR1
   gmprocess.io.esm.core.HDR2


.. py:data:: TEXT_HDR_ROWS
   :annotation: = 64

   

.. py:data:: TIMEFMT
   :annotation: = %Y%m%d_%H%M%S.%f

   

.. py:data:: TIMEFMT2
   :annotation: = %Y-%m-%dT%H:%M:%S.%f

   

.. py:data:: SRC
   :annotation: = ORFEUS Engineering Strong Motion Database

   

.. py:data:: FORMAT
   :annotation: = ESM

   

.. py:data:: HDR1
   :annotation: = EVENT_NAME:

   

.. py:data:: HDR2
   :annotation: = EVENT_ID:

   

.. py:function:: is_esm(filename, config=None)

   Check to see if file is an ESM strong motion file.

   :param filename: Path to possible ESM strong motion file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict

   :returns: True if ESM, False otherwise.
   :rtype: bool


.. py:function:: read_esm(filename, config=None, **kwargs)

   Read European ESM strong motion file.

   :param filename: Path to possible ESM data file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict
   :param kwargs: Other arguments will be ignored.
   :type kwargs: ref

   :returns:

             Obspy Stream containing one channels of acceleration data
                 (cm/s**2).
   :rtype: Stream


