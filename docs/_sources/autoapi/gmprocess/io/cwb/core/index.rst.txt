:py:mod:`gmprocess.io.cwb.core`
===============================

.. py:module:: gmprocess.io.cwb.core


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.cwb.core.is_cwb
   gmprocess.io.cwb.core.read_cwb
   gmprocess.io.cwb.core._get_header_info



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.cwb.core.DATE_FMT
   gmprocess.io.cwb.core.GMT_OFFSET
   gmprocess.io.cwb.core.HDR_ROWS
   gmprocess.io.cwb.core.COLWIDTH
   gmprocess.io.cwb.core.NCOLS


.. py:data:: DATE_FMT
   :annotation: = %Y/%m/%d-%H:%M:%S.%f

   

.. py:data:: GMT_OFFSET
   

   

.. py:data:: HDR_ROWS
   :annotation: = 22

   

.. py:data:: COLWIDTH
   :annotation: = 10

   

.. py:data:: NCOLS
   :annotation: = 4

   

.. py:function:: is_cwb(filename, config=None)

   Check to see if file is a Taiwan Central Weather Bureau strong motion
   file.

   :param filename: Path to possible CWB data file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict

   :returns: True if CWB, False otherwise.
   :rtype: bool


.. py:function:: read_cwb(filename, config=None, **kwargs)

   Read Taiwan Central Weather Bureau strong motion file.

   :param filename: Path to possible CWB data file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict
   :param kwargs: Other arguments will be ignored.
   :type kwargs: ref

   :returns: Obspy Stream containing three channels of acceleration
             data (cm/s**2).
   :rtype: Stream


.. py:function:: _get_header_info(file, data)

   Return stats structure from various headers.

   Output is a dictionary like this:
    - network (str): Always TW
    - station (str)
    - channel (str)
    - location (str): Default is '--'
    - starttime (datetime)
    - duration (float)
    - sampling_rate (float)
    - delta (float)
    - npts (int)
    - coordinates:
      - latitude (float)
      - longitude (float)
      - elevation (float): Default is np.nan
   - standard (Defaults are either np.nan or '')
     - horizontal_orientation (float): Rotation from north (degrees)
     - instrument_period (float): Period of sensor (Hz)
     - instrument_damping (float): Fraction of critical
     - process_time (datetime): Reported date of processing
     - process_level: Either 'V0', 'V1', 'V2', or 'V3'
     - station_name (str): Long form station description
     - sensor_serial_number (str): Reported sensor serial
     - instrument (str)
     - comments (str): Processing comments
     - structure_type (str)
     - corner_frequency (float): Sensor corner frequency (Hz)
     - units (str)
     - source (str): Network source description
     - source_format (str): Always cwb
   - format_specific
       - dc_offset_z (float)
       - dc_offset_h1 (float)
       - dc_offset_h2 (float)

   :param file: File object containing data
   :type file: TextIOWrapper
   :param data: Array of strong motion data
   :type data: ndarray

   :returns: Dictionary of header/metadata information
   :rtype: dictionary


