:py:mod:`gmprocess.io.smc.core`
===============================

.. py:module:: gmprocess.io.smc.core


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.smc.core.is_smc
   gmprocess.io.smc.core.read_smc
   gmprocess.io.smc.core._get_header_info



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.smc.core.ASCII_HEADER_LINES
   gmprocess.io.smc.core.INTEGER_HEADER_LINES
   gmprocess.io.smc.core.FLOAT_HEADER_LINES
   gmprocess.io.smc.core.INT_HEADER_WIDTHS
   gmprocess.io.smc.core.FLOAT_HEADER_WIDTHS
   gmprocess.io.smc.core.DATA_COLUMNS
   gmprocess.io.smc.core.FLOAT_DATA_WIDTHS
   gmprocess.io.smc.core.MAX_ALLOWED_SAMPLE_RATE
   gmprocess.io.smc.core.VALID_HEADERS
   gmprocess.io.smc.core.INSTRUMENTS
   gmprocess.io.smc.core.CONSTRUCTION_TYPES
   gmprocess.io.smc.core.STRUCTURES
   gmprocess.io.smc.core.BRIDGE_LOCATIONS
   gmprocess.io.smc.core.DAM_LOCATIONS


.. py:data:: ASCII_HEADER_LINES
   :annotation: = 11

   

.. py:data:: INTEGER_HEADER_LINES
   :annotation: = 6

   

.. py:data:: FLOAT_HEADER_LINES
   :annotation: = 10

   

.. py:data:: INT_HEADER_WIDTHS
   

   

.. py:data:: FLOAT_HEADER_WIDTHS
   

   

.. py:data:: DATA_COLUMNS
   :annotation: = 8

   

.. py:data:: FLOAT_DATA_WIDTHS
   

   

.. py:data:: MAX_ALLOWED_SAMPLE_RATE
   :annotation: = 100000.0

   

.. py:data:: VALID_HEADERS
   

   

.. py:data:: INSTRUMENTS
   

   

.. py:data:: CONSTRUCTION_TYPES
   

   

.. py:data:: STRUCTURES
   

   

.. py:data:: BRIDGE_LOCATIONS
   

   

.. py:data:: DAM_LOCATIONS
   

   

.. py:function:: is_smc(filename, config=None)

   Check to see if file is a SMC (corrected, in acc.) strong motion file.

   :param filename: Path to possible SMC corrected data file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict

   :returns: True if SMC, False otherwise.
   :rtype: bool


.. py:function:: read_smc(filename, config=None, **kwargs)

   Read SMC strong motion file.

   :param filename: Path to possible SMC data file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict
   :param kwargs:
                  any_structure (bool): Read data from any type of structure,
                      raise Exception if False and structure type is not free-field.
                  accept_flagged (bool): accept problem flagged data.
                  set_location (str): Two character code for location.
                  Other arguments will be ignored.
   :type kwargs: ref

   :returns: Obspy Stream containing one channel of acceleration data
             (cm/s**2).
   :rtype: Stream


.. py:function:: _get_header_info(filename, any_structure=False, accept_flagged=False, location='')

   Return stats structure from various headers.

   Output is a dictionary like this:
    - network
    - station
    - channel
    - location (str): Set to floor the sensor is located on. If not a
           multi-sensor array, default is '--'. Can be set manually by
           the user.
    - starttime
    - sampling_rate
    - npts
    - coordinates:
      - latitude
      - longitude
      - elevation
   - standard
     - horizontal_orientation
     - instrument_period
     - instrument_damping
     - process_level
     - station_name
     - sensor_serial_number
     - instrument
     - comments
     - structure_type
     - corner_frequency
     - units
     - source
     - source_format
   - format_specific
     - vertical_orientation
     - building_floor (0=basement, 1=floor above basement,
       -1=1st sub-basement, etc.
     - bridge_number_spans
     - bridge_transducer_location (
           "free field",
           "at the base of a pier or abutment",
           "on an abutment",
           "on the deck at the top of a pier"
           "on the deck between piers or between an
           abutment and a pier.")
       dam_transducer_location (
           "upstream or downstream free field",
           "at the base of the dam",
           "on the crest of the dam",
           on the abutment of the dam")
       construction_type (
           "Reinforced concrete gravity",
           "Reinforced concrete arch",
           "earth fill",
           "other")

       filter_poles
       data_source


