:py:mod:`gmprocess.io.bhrc.core`
================================

.. py:module:: gmprocess.io.bhrc.core


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.bhrc.core.is_bhrc
   gmprocess.io.bhrc.core.read_bhrc
   gmprocess.io.bhrc.core._read_header_lines
   gmprocess.io.bhrc.core._read_data



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.bhrc.core.INTIMEFMT
   gmprocess.io.bhrc.core.FLOATRE
   gmprocess.io.bhrc.core.INTRE
   gmprocess.io.bhrc.core.TEXT_HDR_ROWS
   gmprocess.io.bhrc.core.INT_HDR_ROWS
   gmprocess.io.bhrc.core.FLOAT_HDR_ROWS
   gmprocess.io.bhrc.core.COLS_PER_ROW
   gmprocess.io.bhrc.core.COLWIDTH
   gmprocess.io.bhrc.core.SOURCE
   gmprocess.io.bhrc.core.SOURCE_FORMAT
   gmprocess.io.bhrc.core.NETWORK
   gmprocess.io.bhrc.core.LEVELS


.. py:data:: INTIMEFMT
   :annotation: = %Y/%m/%d %H:%M:%S

   

.. py:data:: FLOATRE
   :annotation: = [-+]?[0-9]*\.?[0-9]+

   

.. py:data:: INTRE
   :annotation: = [-+]?[0-9]*

   

.. py:data:: TEXT_HDR_ROWS
   :annotation: = 13

   

.. py:data:: INT_HDR_ROWS
   :annotation: = 7

   

.. py:data:: FLOAT_HDR_ROWS
   :annotation: = 7

   

.. py:data:: COLS_PER_ROW
   :annotation: = 10

   

.. py:data:: COLWIDTH
   :annotation: = 13

   

.. py:data:: SOURCE
   :annotation: = Road, Housing & Urban Development Research Center (BHRC)

   

.. py:data:: SOURCE_FORMAT
   :annotation: = BHRC

   

.. py:data:: NETWORK
   :annotation: = I1

   

.. py:data:: LEVELS
   

   

.. py:function:: is_bhrc(filename, config=None)

   Check to see if file is Iran's BHRC format.

   :param filename: Path to possible BHRC format.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict

   :returns: True if BHRC supported, otherwise False.
   :rtype: bool


.. py:function:: read_bhrc(filename, config=None, **kwargs)

   Read the Iran BHRC strong motion data format.

   :param filename: Path to BHRC data file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict
   :param kwargs: Other arguments will be ignored.
   :type kwargs: ref

   :returns: Sequence of one StationStream object containing 3
             StationTrace objects.
   :rtype: list


.. py:function:: _read_header_lines(filename, offset)

   Read the header lines for each channel.

   :param filename: Input BHRC file name.
   :type filename: str
   :param offset: Number of lines to skip from the beginning of the file.
   :type offset: int

   :returns: (header dictionary containing Stats dictionary with
             extra sub-dicts, updated offset rows)
   :rtype: tuple


.. py:function:: _read_data(filename, offset, header)

   Read acceleration data from BHRC file.

   :param filename: BHRC strong motion filename.
   :type filename: str
   :param offset: Number of rows from the beginning of the file to skip.
   :type offset: int
   :param header: Dictionary for given channel with number of points.
   :type header: dict

   :returns: (Acceleration data (in gals), updated offset)
   :rtype: tuple


