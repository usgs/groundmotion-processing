:py:mod:`gmprocess.io.utils`
============================

.. py:module:: gmprocess.io.utils


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.utils.is_evenly_spaced
   gmprocess.io.utils.resample_uneven_trace
   gmprocess.io.utils.flatten_directory
   gmprocess.io.utils._walk_and_unzip
   gmprocess.io.utils._split_all_path
   gmprocess.io.utils._handle_duplicates



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.utils.CONFIG
   gmprocess.io.utils.DUPLICATE_MARKER


.. py:data:: CONFIG
   

   

.. py:data:: DUPLICATE_MARKER
   :annotation: = 1

   

.. py:function:: is_evenly_spaced(times, rtol=1e-06, atol=1e-08)

   Checks whether times are evenly spaced.

   :param times: Array of floats of times in seconds.
   :type times: array
   :param rtol: The relative tolerance parameter. See numpy.allclose.
   :type rtol: float
   :param atol: The absolute tolerance parameter. See numpy.allclose.
   :type atol: float

   :returns: True if times are evenly spaced. False otherwise.
   :rtype: bool


.. py:function:: resample_uneven_trace(trace, times, data, resample_rate=None, method='linear')

   Resample unevenly spaced data.

   :param trace: Trace to resample.
   :type trace: gmprocess.core.stationtrace.StationTrace
   :param times: Array of floats of times in seconds.
   :type times: array
   :param data: Array of floats of values to be resampled.
   :type data: array
   :param resample_rate: Resampling rate in Hz.
   :type resample_rate: float
   :param method: Method of resampling. Currently only supported is 'linear'.
   :type method: str

   :returns:     Resampled trace with updated provenance information.
   :rtype: trace (gmprocess.core.stationtrace.StationTrace)


.. py:function:: flatten_directory(directory)

   Prepare a messy directory to be read in.

   This is largley motivated by how CESMD distributes data with randomly
   zipped files and subdirectories. This flattens the directory structure
   and prepares it for use with either the gminfo command line program or
   to be read in with teh directory_to_streams method.

   :param directory: Directory of ground motion files (streams).
   :type directory: str

   :returns: None.


.. py:function:: _walk_and_unzip(directory)


.. py:function:: _split_all_path(path)


.. py:function:: _handle_duplicates(target)


