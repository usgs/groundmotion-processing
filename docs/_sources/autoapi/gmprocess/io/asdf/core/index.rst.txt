:py:mod:`gmprocess.io.asdf.core`
================================

.. py:module:: gmprocess.io.asdf.core


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.asdf.core.is_asdf
   gmprocess.io.asdf.core.read_asdf
   gmprocess.io.asdf.core.write_asdf



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.asdf.core.TIMEPAT
   gmprocess.io.asdf.core.VERSION


.. py:data:: TIMEPAT
   :annotation: = [0-9]{4}-[0-9]{2}-[0-9]{2}T

   

.. py:data:: VERSION
   

   

.. py:function:: is_asdf(filename, config=None)

   Verify that the input file is an ASDF file.

   :param filename: Path to candidate ASDF file.
   :type filename: str
   :param config: Dictionary containing configuration.
   :type config: dict

   :returns: True if ASDF, False if not.
   :rtype: bool


.. py:function:: read_asdf(filename, eventid=None, stations=None, label=None)

   Read Streams of data (complete with processing metadata) from an ASDF
   file.

   :param filename: Path to valid ASDF file.
   :type filename: str
   :param label: Optional processing label to filter streams.
   :type label: str

   :returns:     List of StationStreams containing processing
                 and channel metadata.
   :rtype: list


.. py:function:: write_asdf(filename, streams, event, label=None)

   Write a number of streams (raw or processed) into an ASDF file.

   :param filename: Path to the HDF file that should contain stream data.
   :type filename: str
   :param streams: List of StationStream objects that should be written into the file.
   :type streams: list
   :param event: Obspy event object or dict (see get_event_dict())
   :type event: Obspy Event or dict
   :param label: Label to append to all streams being added to ASDF file.
   :type label: str


