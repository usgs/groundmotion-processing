:py:mod:`gmprocess.io.report`
=============================

.. py:module:: gmprocess.io.report


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.report.build_report_latex
   gmprocess.io.report.get_prov_latex
   gmprocess.io.report.str_for_latex



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.report.PREAMBLE
   gmprocess.io.report.POSTAMBLE
   gmprocess.io.report.STREAMBLOCK
   gmprocess.io.report.TITLEBLOCK
   gmprocess.io.report.moveout_page_tex


.. py:data:: PREAMBLE
   :annotation: = Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: text
        :linenos:

        
        \documentclass[9pt]{extarticle}

        % Allows for 9pt article class
        \usepackage{extsizes}

        \usepackage{sansmathfonts}
        \usepackage[T1]{fontenc}

        \usepackage{graphicx}
        \usepackage{tikz}

        % grffile allows for multiple dots in image file name
        \usepackage{grffile}

        % Turn off default page numbers
        % \usepackage{nopageno}

        % Needed for table rules
        \usepackage{booktabs}

        \usepackage[english]{babel}

        \usepackage[letterpaper, portrait]{geometry}

        \geometry{
           left=0.75in,
           top=0.0in,
           total={7in,10.5in},
           includeheadfoot
        }

        \setlength\parindent{0pt}

        % Use custom headers
        \usepackage{fancyhdr}
        \pagestyle{fancy}
        \fancyhf{}
        \renewcommand{\headrulewidth}{0pt}
        \cfoot{\thepage}
        %%\lfoot{\today}

        \tikzstyle{box} = [
            draw=blue, fill=blue!20, thick,
            rectangle, rounded corners]

        \begin{document}


    .. raw:: html

        </details>

   

.. py:data:: POSTAMBLE
   :annotation: = Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: text
        :linenos:

        
        \end{document}


    .. raw:: html

        </details>

   

.. py:data:: STREAMBLOCK
   :annotation: = Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: text
        :linenos:

        
        \begin{tikzpicture}[remember picture,overlay]
           \draw[box] (0, 0.5) rectangle (9, 1.0) node[pos=.5]
               {\normalsize [EVENT]};
           \draw[box] (10, 0.5) rectangle (17, 1.0) node[pos=.5]
               {\normalsize [STATION]};
        \end{tikzpicture}

        \includegraphics[height=5.75in]
            {[PLOTPATH]}




    .. raw:: html

        </details>

   

.. py:data:: TITLEBLOCK
   :annotation: = Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: text
        :linenos:

        
        \begin{center}

        \vfill

        \large Summary Report

        \vspace{1cm}

        gmprocess

        \vspace{1cm}

        Code version: [VERSION]

        \vspace{1cm}

        \today

        \vspace{1cm}

        \includegraphics[width=0.9\textwidth]
            {[MAPPATH]}

        [MOVEOUT_PAGE]

        \end{center}

        \vfill

        \newpage





    .. raw:: html

        </details>

   

.. py:data:: moveout_page_tex
   :annotation: = Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: text
        :linenos:

        
        \includegraphics[width=0.9\textwidth]
            {[MOVEOUTPATH]}


    .. raw:: html

        </details>

   

.. py:function:: build_report_latex(st_list, directory, origin, prefix='', config=None, gmprocess_version='unknown')

   Build latex summary report.

   :param st_list: List of streams.
   :type st_list: list
   :param directory: Directory for saving report.
   :type directory: str
   :param origin: ScalarEvent object.
   :type origin: ScalarEvent
   :param prefix: String to prepend to report file name.
   :type prefix: str
   :param config: Config dictionary.
   :type config: dict
   :param gmprocess_version: gmprocess version.

   :returns:     - Name of pdf or latex report file created.
                 - boolean indicating whether PDF creation was successful.
   :rtype: tuple


.. py:function:: get_prov_latex(st)

   Construct a latex representation of a trace's provenance.

   :param st: StationStream of data.
   :type st: StationStream

   :returns: Latex tabular representation of provenance.
   :rtype: str


.. py:function:: str_for_latex(string)

   Helper method to convert some strings that are problematic for latex.


