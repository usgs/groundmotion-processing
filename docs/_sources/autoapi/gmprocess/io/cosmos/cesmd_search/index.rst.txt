:py:mod:`gmprocess.io.cosmos.cesmd_search`
==========================================

.. py:module:: gmprocess.io.cosmos.cesmd_search


Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   gmprocess.io.cosmos.cesmd_search.get_metadata
   gmprocess.io.cosmos.cesmd_search.get_stations_dataframe
   gmprocess.io.cosmos.cesmd_search.get_records



Attributes
~~~~~~~~~~

.. autoapisummary::

   gmprocess.io.cosmos.cesmd_search.URL_TEMPLATE
   gmprocess.io.cosmos.cesmd_search.RETURN_TYPES
   gmprocess.io.cosmos.cesmd_search.PROCESS_LEVELS
   gmprocess.io.cosmos.cesmd_search.GROUP_OPTIONS
   gmprocess.io.cosmos.cesmd_search.NETWORKS
   gmprocess.io.cosmos.cesmd_search.STATION_TYPES
   gmprocess.io.cosmos.cesmd_search.FAULT_TYPES
   gmprocess.io.cosmos.cesmd_search.KEY_TABLE


.. py:data:: URL_TEMPLATE
   :annotation: = https://strongmotioncenter.org/wserv/records/query

   

.. py:data:: RETURN_TYPES
   :annotation: = ['dataset', 'metadata']

   

.. py:data:: PROCESS_LEVELS
   :annotation: = ['processed', 'raw', 'plots', 'all']

   

.. py:data:: GROUP_OPTIONS
   :annotation: = ['station', 'event']

   

.. py:data:: NETWORKS
   

   

.. py:data:: STATION_TYPES
   

   

.. py:data:: FAULT_TYPES
   :annotation: = ['NM', 'RS', 'SS']

   

.. py:data:: KEY_TABLE
   

   

.. py:function:: get_metadata(eqlat=None, eqlon=None, eqtime=None, eqradius=10, abandoned=False, station_type='Ground', eqtimewindow=10, station_radius=200)


.. py:function:: get_stations_dataframe(metadata)

   Return a dataframe of station information from one event in CESMD
   metadata.

   :param metadata: metata dictionary from CESMD.
   :type metadata: dict

   :returns:

             Contains columns:
                 - network
                 - station_code
                 - station_name
                 - latitude
                 - longitude
                 - elevation
                 - station_type
                 - epidist
                 - raw_avail
                 - processed_avail
   :rtype: dataframe


.. py:function:: get_records(output, email, unpack=False, process_level='raw', group_by='event', minpga=None, maxpga=None, min_station_dist=None, max_station_dist=None, network=None, station_type='Ground', include_inactive=False, station_name=None, min_station_latitude=None, max_station_latitude=None, min_station_longitude=None, max_station_longitude=None, station_latitude=None, station_longitude=None, radius_km=None, station_code=None, event_name=None, minmag=None, maxmag=None, fault_type=None, startdate=None, enddate=None, min_event_latitude=None, max_event_latitude=None, min_event_longitude=None, max_event_longitude=None, event_latitude=None, event_longitude=None, event_radius=None, eventid=None)

   Retrieve strong motion waveform records from CESMD website.

   :param output: Filename or directory where downloaded zip data will be written.
   :type output: str
   :param unpack: If True, all zipped files will be unpacked (output will become a
                  directory name.)
   :type unpack: bool
   :param email: Email address of requesting user.
   :type email: str
   :param process_level: One of 'raw','processed','plots'.
   :type process_level: str
   :param group_by: One of 'event', 'station'
   :type group_by: str
   :param minpga: Minimum PGA value.
   :type minpga: float
   :param maxpga: Maximum PGA value.
   :type maxpga: float
   :param min_station_dist: Minimum station distance from epicenter.
   :type min_station_dist: float
   :param max_station_dist: Maximum station distance from epicenter.
   :type max_station_dist: float
   :param network: Source network of strong motion data.
   :type network: str
   :param station_type: Type of strong motion station (array, dam, etc.)
   :type station_type: str
   :param include_inactive: Include results from stations that are no longer active.
   :type include_inactive: bool
   :param station_name: Search only for station matching input name.
   :type station_name: str
   :param min_station_latitude: Latitude station min when using a box search.
   :type min_station_latitude: float
   :param max_station_latitude: Latitude station max when using a box search.
   :type max_station_latitude: float
   :param min_station_longitude: Longitude station min when using a box search.
   :type min_station_longitude: float
   :param max_station_longitude: Longitude station max when using a box search.
   :type max_station_longitude: float
   :param station_latitude: Center latitude for station search.
   :type station_latitude: float
   :param station_longitude: Center longitude for station search.
   :type station_longitude: float
   :param radius_km: Radius (km) for station search.
   :type radius_km: float
   :param station_code: Particular station code to search for.
   :type station_code: str
   :param event_name: Earthquake name to search for.
   :type event_name: str
   :param minmag: Magnitude minimum when using a magnitude search.
   :type minmag: float
   :param maxmag: Magnitude maximum when using a magnitude search.
   :type maxmag: float
   :param fault_type: Fault type.
   :type fault_type: str
   :param start_date: Start date/time in YYYY-MM-DD HH:MM:SS format
   :type start_date: str
   :param end_date: End date/time in YYYY-MM-DD HH:MM:SS format
   :type end_date: str
   :param min_event_latitude: Latitude event min when using a box search.
   :type min_event_latitude: float
   :param max_event_latitude: Latitude event max when using a box search.
   :type max_event_latitude: float
   :param min_event_longitude: Longitude event min when using a box search.
   :type min_event_longitude: float
   :param max_event_longitude: Longitude event max when using a box search.
   :type max_event_longitude: float
   :param event_latitude: Center earthquake latitude for radius search.
   :type event_latitude: float
   :param event_longitude: Center earthquake longitude for radius search.
   :type event_longitude: float
   :param event_radius: Earthquake search radius (km).
   :type event_radius: float
   :param eventid: NEIC or other ANSS event ID.
   :type eventid: str

   :returns: (Top level output directory, list of data files)
   :rtype: tuple

   :raises KeyError:


