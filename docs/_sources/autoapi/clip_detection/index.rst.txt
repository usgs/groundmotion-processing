:py:mod:`clip_detection`
========================

.. py:module:: clip_detection

.. autoapi-nested-parse::

   Module for individual/heuristic clipping methods. These get combined
   with the neurual network model (clipping_ann.py). The NN model gets
   called by clipping_check.py module.



Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   clip_detection.ClipDetection




.. py:class:: ClipDetection(st, test_all=False)

   Parent class for clipping detection algorithms.

   .. attribute:: st

      Record of three orthogonal traces.

      :type: StationStream

   .. attribute:: test_all

      If true, compute test values for all traces.

      :type: bool, default=False

   .. attribute:: is_clipped

      True if the record is clipped.

      :type: bool

   .. method:: _detect()

      
      Determines if the trace is clipped or not.

   .. method:: _clean_trace()

      
      Trim and normalize a trace.

   .. method:: _get_results()

      
      Iterates through and runs _detect() on each trace in the stream.
      

   .. py:method:: _clean_trace(self, tr)

      Pre-processing steps.

      :param tr: A single trace in the record.
      :type tr: StationTrace

      :returns:     Cleaned trace.
      :rtype: clean_tr (StationTrace)


   .. py:method:: _detect(self, clip_tr)

      Clipping detection algorithm for the individual child class

      :param tr: A single trace in the record.
      :type tr: StationTrace

      :returns:     Did the trace pass the test?
      :rtype: bool


   .. py:method:: _get_results(self)

      Iterates through and runs _detect() on each trace in the stream to
      determine if the record is clipped or not.

      :param None:

      :returns: None



